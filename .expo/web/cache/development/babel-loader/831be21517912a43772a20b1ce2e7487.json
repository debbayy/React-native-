{"ast":null,"code":"import { theme } from \"native-base\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Container from \"./src/screens/Container\";\nimport Todo from \"./src/screens/Todo\";\nimport AddTodo from \"./src/screens/AddTodo\";\nimport Todos from \"./src/components/todos\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction tabsBottom() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Calculator\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Calculator\") {\n            iconName = focused ? \"ios-calculator-sharp\" : \"ios-calculator-outline\";\n          } else if (route.name === \"Todos\") {\n            iconName = focused ? \"ios-add-circle-sharp\" : \"ios-add-circle-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary[\"900\"],\n        tabBarInactiveTintColor: \"gray\"\n      };\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Calculator\",\n    component: Container\n  }), React.createElement(Tab.Screen, {\n    name: \"Todos\",\n    component: Todos\n  }));\n}\n\nexport default function Navigation() {\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: tabsBottom,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddTodo\",\n    component: AddTodo\n  })));\n}","map":{"version":3,"sources":["D:/debbayy/Calculator&todo/Navigation.js"],"names":["theme","React","Ionicons","NavigationContainer","createStackNavigator","createBottomTabNavigator","Container","Todo","AddTodo","Todos","Stack","Tab","tabsBottom","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","Navigation"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAGA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAEA,IAAMO,GAAG,GAAGN,wBAAwB,EAApC;;AAEA,SAASO,UAAT,GAAsB;AACpB,SACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAC,YADnB;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,WAAW,EAAE,KADgB;AAE7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AACA,cAAIN,KAAK,CAACO,IAAN,KAAe,YAAnB,EAAiC;AAC/BD,YAAAA,QAAQ,GAAGH,OAAO,GACd,sBADc,GAEd,wBAFJ;AAGD,WAJD,MAIO,IAAIH,KAAK,CAACO,IAAN,KAAe,OAAnB,EAA4B;AACjCD,YAAAA,QAAQ,GAAGH,OAAO,GACd,sBADc,GAEd,wBAFJ;AAGD;;AAED,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED;AAA7C,YAAP;AACD,SAf4B;AAgB7BI,QAAAA,qBAAqB,EAAErB,KAAK,CAACsB,MAAN,CAAaC,OAAb,CAAqB,KAArB,CAhBM;AAiB7BC,QAAAA,uBAAuB,EAAE;AAjBI,OAAhB;AAAA;AAFjB,KAsBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,SAAS,EAAElB;AAAzC,IAtBF,EAwBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAEG;AAApC,IAxBF,CADF;AA4BD;;AAED,eAAe,SAASgB,UAAT,GAAsB;AACnC,SACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEb,UAFb;AAGE,IAAA,OAAO,EAAE;AACPE,MAAAA,WAAW,EAAE;AADN;AAHX,IADF,EASE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEN;AAAxC,IATF,CADF,CADF;AAeD","sourcesContent":["import { theme } from \"native-base\";\r\nimport React from \"react\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\n\r\n//importing screens\r\nimport Container from \"./src/screens/Container\";\r\nimport Todo from \"./src/screens/Todo\";\r\nimport AddTodo from \"./src/screens/AddTodo\";\r\nimport Todos from \"./src/components/todos\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction tabsBottom() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Calculator\"\r\n      screenOptions={({ route }) => ({\r\n        headerShown: false,\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n          if (route.name === \"Calculator\") {\r\n            iconName = focused\r\n              ? \"ios-calculator-sharp\"\r\n              : \"ios-calculator-outline\";\r\n          } else if (route.name === \"Todos\") {\r\n            iconName = focused\r\n              ? \"ios-add-circle-sharp\"\r\n              : \"ios-add-circle-outline\";\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary[\"900\"],\r\n        tabBarInactiveTintColor: \"gray\",\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Calculator\" component={Container} />\r\n      {/* <Tab.Screen name=\"Todo\" component={Todo} /> */}\r\n      <Tab.Screen name=\"Todos\" component={Todos} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Main\"\r\n          component={tabsBottom}\r\n          options={{\r\n            headerShown: false,\r\n          }}\r\n        />\r\n        {/* modal */}\r\n        <Stack.Screen name=\"AddTodo\" component={AddTodo} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}