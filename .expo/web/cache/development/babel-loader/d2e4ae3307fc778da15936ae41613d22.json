{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Layout from \"../components/Layout\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar COLORS = {\n  primary: \"#1f145c\",\n  white: \"#fff\"\n};\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\nvar Todos = function Todos() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var getTodos = function getTodos() {\n    var res;\n    return _regeneratorRuntime.async(function getTodos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(\"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos\"));\n\n          case 3:\n            res = _context.sent;\n            setTodos(res.data);\n            console.log(res);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"Data Not Found\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var addTodo = function addTodo() {\n    var data, adddata, response;\n    return _regeneratorRuntime.async(function addTodo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            data = {\n              title: title\n            };\n            adddata = \"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos\";\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"\" + adddata, data));\n\n          case 5:\n            response = _context2.sent;\n            setTitle(\"\");\n            getTodos();\n            console.log(response);\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      action = _useState8[0],\n      setAction = _useState8[1];\n\n  var handleDelete = function handleDelete(id) {\n    return _regeneratorRuntime.async(function handleDelete$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log(id);\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(axios.delete(\"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos/\" + id));\n\n          case 4:\n            setAction(!action);\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editTodo = _useState10[0],\n      setEditTodo = _useState10[1];\n\n  var handleEdit = function handleEdit(id) {\n    return _regeneratorRuntime.async(function handleEdit$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            console.log(id);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(axios.patch(\"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos/\" + id));\n\n          case 4:\n            setEditTodo(!action);\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getTodos();\n  }, [action]);\n  return React.createElement(View, null, React.createElement(View, null, React.createElement(Modal, {\n    isOpen: showModal,\n    onClose: function onClose() {\n      return setShowModal(false);\n    }\n  }, React.createElement(Modal.Content, {\n    maxWidth: \"400px\",\n    style: {\n      backgroundColor: \"#F1D1D0\"\n    }\n  }, React.createElement(Modal.Header, null, \"Add Todo\"), React.createElement(Modal.Body, null, React.createElement(FormControl, null, React.createElement(Input, {\n    value: title,\n    autoFocus: true,\n    onChangeText: function onChangeText(nextValue) {\n      return setTitle(nextValue);\n    },\n    style: {\n      backgroundColor: \"#fff\"\n    }\n  }))), React.createElement(Modal.Footer, {\n    style: {\n      backgroundColor: \"#F1D1D0\"\n    }\n  }, React.createElement(Button.Group, {\n    space: 2\n  }, React.createElement(Button, {\n    variant: \"ghost\",\n    color: \"#3F0713\",\n    onPress: function onPress() {\n      setShowModal(false);\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    onPress: onPressButton,\n    style: {\n      backgroundColor: \"#3F0713\"\n    }\n  }, \"Save\"))))), todos.map(function (item) {\n    return React.createElement(View, {\n      style: styles.listItem\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 15,\n        color: COLORS.primary\n      }\n    }, item.title)), React.createElement(TouchableOpacity, null, React.createElement(View, {\n      style: [styles.actionIcon, {\n        backgroundColor: \"green\"\n      }]\n    }, React.createElement(Icon, {\n      name: \"done\",\n      size: 20,\n      color: \"white\"\n    }))), React.createElement(TouchableOpacity, null, React.createElement(View, {\n      style: styles.actionIcon\n    }, React.createElement(Icon, {\n      onPress: function onPress() {\n        return handleDelete(item._id);\n      },\n      name: \"delete\",\n      size: 20,\n      color: \"white\"\n    }))), React.createElement(TouchableOpacity, null, React.createElement(View, {\n      style: styles.actionIcon\n    }, React.createElement(Icon, {\n      name: \"edit\",\n      size: 20,\n      color: \"white\"\n    }))));\n  })), React.createElement(View, null, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform === \"android\" ? \"padding\" : \"height\",\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: {\n      padding: 15,\n      marginHorizontal: -20,\n      borderRadius: 50,\n      border: \"none\"\n    },\n    value: title,\n    placeholder: \"Add Todo\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: addTodo\n  }, React.createElement(View, {\n    style: styles.iconContainer\n  }, React.createElement(Icon, {\n    name: \"add\",\n    color: \"white\",\n    size: 30\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  footer: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n    backgroundColor: \"#FF5757\"\n  },\n  inputContainer: {\n    height: 30,\n    paddingHorizontal: 20,\n    elevation: 40,\n    backgroundColor: COLORS.white,\n    flex: 1,\n    borderRadius: 30\n  },\n  iconContainer: {\n    height: 50,\n    width: 50,\n    backgroundColor: COLORS.primary,\n    elevation: 40,\n    borderRadius: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  listItem: {\n    padding: 20,\n    backgroundColor: COLORS.white,\n    flexDirection: \"row\",\n    elevation: 12,\n    borderRadius: 7,\n    marginVertical: 10\n  },\n  actionIcon: {\n    height: 25,\n    width: 25,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"red\",\n    marginLeft: 5,\n    borderRadius: 3\n  },\n  header: {\n    padding: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }\n});\nexport default Todos;","map":{"version":3,"sources":["D:/debbayy/Calculator&todo/src/components/todos.js"],"names":["React","useState","Layout","Icon","AsyncStorage","COLORS","primary","white","axios","useEffect","Todos","todos","setTodos","showModal","setShowModal","getTodos","get","res","data","console","log","alert","title","setTitle","addTodo","adddata","post","response","action","setAction","handleDelete","id","delete","editTodo","setEditTodo","handleEdit","patch","backgroundColor","nextValue","onPressButton","map","item","styles","listItem","flex","fontWeight","fontSize","color","actionIcon","_id","Platform","inputContainer","padding","marginHorizontal","borderRadius","border","text","iconContainer","StyleSheet","create","footer","position","bottom","width","flexDirection","alignItems","paddingHorizontal","height","elevation","justifyContent","marginVertical","marginLeft","header"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  View,\r\n  ScrollView,\r\n  TextInput,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport Layout from \"../components/Layout\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nconst COLORS = { primary: \"#1f145c\", white: \"#fff\" };\r\nimport axios from \"axios\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nconst Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const getTodos = async () => {\r\n    /*  setIsLoading(true); */\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos\"\r\n      );\r\n\r\n      setTodos(res.data);\r\n      console.log(res);\r\n    } catch (error) {\r\n      alert(\"Data Not Found\");\r\n      /* setIsLoading(false); */\r\n    }\r\n  };\r\n\r\n  const [title, setTitle] = useState();\r\n  const addTodo = async () => {\r\n    try {\r\n      const data = {\r\n        title,\r\n      };\r\n\r\n      const adddata =\r\n        \"https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos\";\r\n\r\n      const response = await axios.post(`${adddata}`, data);\r\n      setTitle(\"\");\r\n      getTodos();\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [action, setAction] = useState(false);\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      console.log(id);\r\n      await axios.delete(\r\n        `https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos/${id}`\r\n      );\r\n      setAction(!action);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [editTodo, setEditTodo] = useState(false);\r\n  const handleEdit = async (id) => {\r\n    try {\r\n      console.log(id);\r\n      await axios.patch(\r\n        `https://api.kontenbase.com/query/api/v1/b97b9784-95d8-4abd-806b-18875d222b49/todos/${id}`\r\n      );\r\n      setEditTodo(!action);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, [action]);\r\n\r\n  /*  const markTodoComplete = (todoId) => {\r\n      const newTodosItem = todos.map((item) => {\r\n        if (item.id == todoId) {\r\n          return { ...item, completed: true };\r\n        }\r\n        return item;\r\n      });\r\n  \r\n      setTodos(newTodosItem);\r\n    }; */\r\n\r\n  /*  const editTodo = () => {\r\n      if (textInput == \"\") {\r\n        Alert.alert(\"Error\", \"Please input todo\");\r\n      } else {\r\n        const newTodo = {\r\n          id: Math.random(),\r\n          task: textInput,\r\n          completed: true,\r\n        };\r\n        setTodos([...todos, newTodo]);\r\n        setTextInput(\"\");\r\n      }\r\n    }; */\r\n\r\n  /*   const deleteTodo = (todoId) => {\r\n      const newTodosItem = todos.filter((item) => item.id != todoId);\r\n      setTodos(newTodosItem);\r\n    };\r\n  \r\n    const clearAllTodos = () => {\r\n      Alert.alert(\"Confirm\", \"Clear todos?\", [\r\n        {\r\n          text: \"Yes\",\r\n          onPress: () => setTodos([]),\r\n        },\r\n        {\r\n          text: \"No\",\r\n        },\r\n    ]);\r\n}; */\r\n\r\n  return (\r\n    <View /*  style={{ height: \"100%\" }} */>\r\n      <View>\r\n        <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\r\n          <Modal.Content\r\n            maxWidth=\"400px\"\r\n            style={{ backgroundColor: \"#F1D1D0\" }}\r\n          >\r\n            <Modal.Header>Add Todo</Modal.Header>\r\n            <Modal.Body>\r\n              <FormControl>\r\n                <Input\r\n                  value={title}\r\n                  autoFocus={true}\r\n                  onChangeText={(nextValue) => setTitle(nextValue)}\r\n                  style={{ backgroundColor: \"#fff\" }}\r\n                />\r\n              </FormControl>\r\n            </Modal.Body>\r\n            <Modal.Footer style={{ backgroundColor: \"#F1D1D0\" }}>\r\n              <Button.Group space={2}>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  color=\"#3F0713\"\r\n                  onPress={() => {\r\n                    setShowModal(false);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onPress={onPressButton}\r\n                  style={{ backgroundColor: \"#3F0713\" }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Button.Group>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n        {todos.map((item) => {\r\n          return (\r\n            <View style={styles.listItem}>\r\n              <View style={{ flex: 1 }}>\r\n                <Text\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 15,\r\n                    color: COLORS.primary,\r\n                    // textDecorationLine: todo?.completed ? \"line-through\" : \"none\",\r\n                  }}\r\n                >\r\n                  {item.title}\r\n                </Text>\r\n              </View>\r\n              <TouchableOpacity>\r\n                <View style={[styles.actionIcon, { backgroundColor: \"green\" }]}>\r\n                  <Icon name=\"done\" size={20} color=\"white\" />\r\n                </View>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity>\r\n                <View style={styles.actionIcon}>\r\n                  <Icon\r\n                    onPress={() => handleDelete(item._id)}\r\n                    name=\"delete\"\r\n                    size={20}\r\n                    color=\"white\"\r\n                  />\r\n                </View>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity>\r\n                <View style={styles.actionIcon}>\r\n                  <Icon name=\"edit\" size={20} color=\"white\" />\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n\r\n      <View>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform === \"android\" ? \"padding\" : \"height\"}\r\n          style={styles.inputContainer}\r\n        >\r\n          <TextInput\r\n            style={{\r\n              padding: 15,\r\n              marginHorizontal: -20,\r\n              borderRadius: 50,\r\n              border: \"none\",\r\n            }}\r\n            value={title}\r\n            placeholder=\"Add Todo\"\r\n            onChangeText={(text) => setTitle(text)}\r\n          />\r\n\r\n          <TouchableOpacity onPress={addTodo}>\r\n            <View style={styles.iconContainer}>\r\n              <Icon name=\"add\" color=\"white\" size={30} />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n//   const ListItem = ({ todo }) => {\r\n//     return (\r\n//       <View style={styles.listItem}>\r\n//         <View style={{ flex: 1 }}>\r\n//           <Text\r\n//             style={{\r\n//               fontWeight: \"bold\",\r\n//               fontSize: 15,\r\n//               color: COLORS.primary,\r\n//               textDecorationLine: todo?.completed ? \"line-through\" : \"none\",\r\n//             }}\r\n//           >\r\n//             {todo?.task}\r\n//           </Text>\r\n//             </View>\r\n\r\n//         {!todo?.completed && (\r\n//           <TouchableOpacity onPress={() => markTodoComplete(todo._id)}>\r\n//             <View style={[styles.actionIcon, { backgroundColor: \"green\" }]}>\r\n//               <Icon name=\"done\" size={20} color=\"white\" />\r\n//             </View>\r\n//           </TouchableOpacity>\r\n//         )}\r\n//         <TouchableOpacity onPress={() => deleteTodo(todo._id)}>\r\n//           <View style={styles.actionIcon}>\r\n//             <Icon name=\"delete\" size={20} color=\"white\" />\r\n//           </View>\r\n//         </TouchableOpacity>\r\n//         <TouchableOpacity onPress={() => editTodo(todo._id)}>\r\n//           <View style={styles.actionIcon}>\r\n//             <Icon name=\"edit\" size={20} color=\"white\" />\r\n//           </View>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     );\r\n//   };\r\n//   return (\r\n//     <SafeAreaView\r\n//       style={{\r\n//         flex: 1,\r\n//         backgroundColor: \"blue\",\r\n//       }}\r\n//     >\r\n//       <View style={styles.header}>\r\n//         <Text\r\n//           style={{\r\n//             fontWeight: \"bold\",\r\n//             fontSize: 20,\r\n//             color: COLORS.primary,\r\n//           }}\r\n//         >\r\n//           TODO APP\r\n//         </Text>\r\n//         <Icon name=\"delete\" size={25} color=\"red\" onPress={clearAllTodos} />\r\n//       </View>\r\n//       <FlatList\r\n//         showsVerticalScrollIndicator={false}\r\n//         contentContainerStyle={{ padding: 20, paddingBottom: 100 }}\r\n//         data={todos}\r\n//         /*      onRefresh={getTodos} */\r\n//         renderItem={({ item }) => <ListItem todo={item} />}\r\n//       />\r\n\r\n//     </SafeAreaView>\r\n//   );\r\n// };\r\n\r\nconst styles = StyleSheet.create({\r\n  footer: {\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n    backgroundColor: \"#FF5757\",\r\n  },\r\n  inputContainer: {\r\n    height: 30,\r\n    paddingHorizontal: 20,\r\n    elevation: 40,\r\n    backgroundColor: COLORS.white,\r\n    flex: 1,\r\n    borderRadius: 30,\r\n  },\r\n  iconContainer: {\r\n    height: 50,\r\n    width: 50,\r\n    backgroundColor: COLORS.primary,\r\n    elevation: 40,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  listItem: {\r\n    padding: 20,\r\n    backgroundColor: COLORS.white,\r\n    flexDirection: \"row\",\r\n    elevation: 12,\r\n    borderRadius: 7,\r\n    marginVertical: 10,\r\n  },\r\n  actionIcon: {\r\n    height: 25,\r\n    width: 25,\r\n    backgroundColor: COLORS.white,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\",\r\n    marginLeft: 5,\r\n    borderRadius: 3,\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n});\r\n\r\nexport default Todos;\r\n\r\n// const saveTodoToUserDevice = async (todos) => {\r\n//   try {\r\n//     const stringifyTodos = JSON.stringify(todos);\r\n//     await AsyncStorage.setItem(\"todos\", stringifyTodos);\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\n// const getTodosFromUserDevice = async () => {\r\n//   try {\r\n//     const todos = await AsyncStorage.getItem(\"todos\");\r\n//     if (todos != null) {\r\n//       setTodos(JSON.parse(todos));\r\n//     }\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}